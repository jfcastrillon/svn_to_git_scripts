#!/bin/bash

if [ "$#" -ne 3 ]; then
    echo "Illegal number of parameters"
    exit 1
fi

####### Project name
PROJECT_NAME=$1
#EMAIL="wellsky.com"

###########################
####### SVN
# SVN repository to be migrated
USERNAME=$2
PASSWORD=$3
BASE_SVN="https://svn.bowmansystems.local/$PROJECT_NAME"
SVN_ARGS=" --non-interactive --username=$USERNAME --password=$PASSWORD"

# Organization inside BASE_SVN
BRANCHES="branches"
TAGS="tags"
TRUNK="trunk"

###########################
####### GIT
# Git repository to migrate
GIT_URL="https://10.3.4.190/jcastrillon/${PROJECT_NAME}_test.git"

###########################
#### Don't need to change from here
###########################

# Geral Configuration
ABSOLUTE_PATH=$(pwd)
TMP=$ABSOLUTE_PATH/"migration-"$PROJECT_NAME

# Branchs Configuration
SVN_BRANCHES=$BASE_SVN/$BRANCHES
SVN_TAGS=$BASE_SVN/$TAGS
SVN_TRUNK=$BASE_SVN/$TRUNK

AUTHORS=$TMP/$PROJECT_NAME"-authors.txt"

echo '[LOG] Starting migration of '$SVN_TRUNK
echo '[LOG] Using: '$(git --version)
echo '[LOG] Using: '$(svn --version | grep svn,)

if [ ! -d "$TMP" ]; then
  # Control will enter here if $DIRECTORY doesn't exist.
  mkdir $TMP
fi

cd $TMP

echo
echo '[LOG] Getting SSL certificates'
svn info $BASE_SVN $SVN_ARGS

#echo
#echo '[LOG] Checking the authors file'
if [ ! -f $AUTHORS ]; then
    echo "Authors file not found!"
    exit 1
fi

echo
echo '[LOG] Getting first revision'
FIRST_REVISION=$( svn log -r 1:HEAD --limit 1 $BASE_SVN $SVN_ARGS | awk -F '|' '/^r/ {sub("^ ", "", $1); sub(" $", "", $1); print $1}' )

echo
echo '[RUN] git svn fetch -'$FIRST_REVISION':HEAD'
git svn fetch -$FIRST_REVISION:HEAD

echo
echo '[RUN] git remote add origin '$GIT_URL
git remote add origin $GIT_URL

echo
echo '[RUN] svn ls '$SVN_BRANCHES
for BRANCH in $(svn ls $SVN_BRANCHES); do
    echo git branch ${BRANCH%/} remotes/svn/${BRANCH%/}
    git branch ${BRANCH%/} remotes/svn/${BRANCH%/}
done

git for-each-ref --format="%(refname:short) %(objectname)" refs/remotes/origin/tags | grep -v "@" | cut -d / -f 3- |
while read ref
do
  echo git tag -a $ref -m 'import tag from svn'
  git tag -a $ref -m 'import tag from svn'
done

git for-each-ref --format="%(refname:short)" refs/remotes/origin/tags | cut -d / -f 1- |
while read ref
do
  git branch -rd $ref
done

# echo
# echo '[RUN] git push'
# git branch â€“r
# git svn show-ignore > .gitignore
# git config --global http.sslVerify false
# cp -rf .git/refs/remotes/origin/tags/* .git/refs/tags/
# rm -rf .git/refs/remotes/origin/tags
# cp -rf .git/refs/remotes/origin/* .git/refs/heads/
# rm -rf .git/refs/remotes/origin
# git branch -d trunk
# git push origin --all
# git push origin --tags

echo 'Sucessufull.'
